<Project DefaultTargets="build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Microsoft.Build.Tasks.XmlPoke" AssemblyName="Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  
  <PropertyGroup>
    <ToolsFolder>..\tools</ToolsFolder>
    <ScriptsFolder>..\scripts</ScriptsFolder>
    <BuildOutputFolder>..\deploy\NET40</BuildOutputFolder>
    <SrcFolder>..\src</SrcFolder>
    
    <!-- Should be provided from command-line / CI environment -->
    <Version></Version>
    <DefaultNuSpecVersion>0.0.1</DefaultNuSpecVersion>
    <NuGet>$(ToolsFolder)\NuGet\NuGet.exe</NuGet>
    <IlMerge>$(ToolsFolder)\IlMerge\IlMerge.exe</IlMerge>
    <Zip>$(ToolsFolder)\7zip\7za.exe</Zip>
    
    <SnoopOutputFolder>$(BuildOutputFolder)\Snoop</SnoopOutputFolder>
    <SnoopProjectOutputFolder>$(SrcFolder)\Rebus.Snoop\bin\Release</SnoopProjectOutputFolder>

    <ReturnToSourceQueueOutputFolder>$(BuildOutputFolder)\ReturnToSourceQueue</ReturnToSourceQueueOutputFolder>
    <ReturnToSourceQueueMsmqProjectOutputFolder>$(SrcFolder)\Rebus.ReturnToSourceQueue.Msmq\bin\Release</ReturnToSourceQueueMsmqProjectOutputFolder>
    
    <TimeoutOutputFolder>$(BuildOutputFolder)\Timeout</TimeoutOutputFolder>
    <TimeoutProjectDir>$(SrcFolder)\Rebus.Timeout</TimeoutProjectDir>
    <TimeoutProjectOutputFolder>$(TimeoutProjectDir)\bin\Release</TimeoutProjectOutputFolder>
  </PropertyGroup>

  <ItemGroup>
    <AllProjects Include="$(SrcFolder)\**\*.csproj" />

    <RebusProjects Include="$(SrcFolder)\Rebus\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.MongoDb\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.Log4Net\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.Castle.Windsor\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.StructureMap\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.RavenDb\*.csproj" />
    <RebusProjects Include="$(SrcFolder)\Rebus.Autofac\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.Unity\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.RabbitMQ\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.AzureServiceBus\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.Ninject\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.NLog\*.csproj"/>
    <RebusProjects Include="$(SrcFolder)\Rebus.Async\*.csproj"/>

    <Docs Include="$(SrcFolder)\Rebus\bin\Release\Rebus.xml" />
    <Docs Include="$(SrcFolder)\Rebus.*\bin\Release\Rebus.*.xml" />

    <NuSpecFiles Include="$(ScriptsFolder)\*.nuspec" />
    <DependantNuSpecFiles Include="$(ScriptsFolder)\*.nuspec" Exclude="$(ScriptsFolder)\Rebus.nuspec" />

    <SnoopProjects Include="$(SrcFolder)\Rebus.Snoop\*.csproj"/>
    <ReturnToSourceQueueProjects Include="$(SrcFolder)\Rebus.ReturnToSourceQueue.*\*.csproj"/>
    <TimeoutProjects Include="$(SrcFolder)\Rebus.Timeout\*.csproj"/>
  </ItemGroup>

  <Target Name="build" DependsOnTargets="clean_output_folder;compile_projects;copy_build_output;merge;createNugetPackage" />

  <Target Name="chocoPackTimeoutService">
    <PropertyGroup>
      <OutputDirectory>$(BuildOutputFolder)\ChocoTimeout</OutputDirectory>
    </PropertyGroup>

    <RemoveDir Directories="$(OutputDirectory)" ContinueOnError="true"/>
    <MakeDir Directories="$(OutputDirectory)"/>
    
    <MSBuild Projects="@(TimeoutProjects)" Properties="Configuration=Release"/>
    <Exec Command="$(NuGet) pack $(TimeoutProjectDir)\Rebus.Timeout.nuspec -OutputDirectory $(OutputDirectory) -NoPackageAnalysis"/>
  </Target>
  
  <Target Name="clean_output_folder">
    <Message Text="Removing old output folder"/>
    <RemoveDir Directories="$(BuildOutputFolder)" ContinueOnError="true"/>
  </Target>

  <Target Name="compile_projects">
    <Message Text="Building everything"/>

    <MSBuild Projects="@(RebusProjects)" Targets="build" StopOnFirstFailure="true" Properties="Configuration=Release">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MSBuild>
  </Target>

  <Target Name="copy_build_output">
    <Message Text="Copying build output to deploy folder"/>

    <Copy SourceFiles="@(AssembliesBuilt)" DestinationFolder="$(BuildOutputFolder)" />
    <Copy SourceFiles="@(Docs)" DestinationFolder="$(BuildOutputFolder)" />
  </Target>

  <Target Name="merge">
    <Message Text="Merge Newtonsoft.Json.NET into Rebus"/>

    <Delete Files="$(BuildOutputFolder)\Rebus.dll"/>
    <!-- should probably use variables instead of hardcoded DLL paths here ... -->
    <Exec Command="$(IlMerge) /out:$(BuildOutputFolder)\Rebus.dll ..\src\Rebus\bin\Release\Rebus.dll ..\src\Rebus\bin\Release\Newtonsoft.Json.dll /targetplatform:&quot;v4,$(ProgramFiles)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0&quot; /internalize"/>
  </Target>

  <Target Name="createNugetPackage" DependsOnTargets="updateNuspecVersions" Condition="'$(Version)' != ''">
    <Message Text="NuGet packing..."/>

    <Exec Command="$(NuGet) pack %(NuSpecFiles.FullPath) -OutputDirectory $(BuildOutputFolder)"/>

    <!-- Revert NuSpec versions. Version doesn't need to be committed to repo. -->
    <XmlPoke XmlInputPath="%(NuSpecFiles.FullPath)" Query="//version" Value="$(DefaultNuSpecVersion)" />
    <XmlPoke XmlInputPath="%(DependantNuSpecFiles.FullPath)" Query="//dependency[@id='Rebus']/@version" Value="$(DefaultNuSpecVersion)" />
  </Target>

  <Target Name="updateNuspecVersions" Condition="'$(Version)' != ''">
    <Message Text="Updating NuSpec version..."/>
    <XmlPoke XmlInputPath="%(NuSpecFiles.FullPath)" Query="//version" Value="$(Version)" />
    <XmlPoke XmlInputPath="%(DependantNuSpecFiles.FullPath)" Query="//dependency[@id='Rebus']/@version" Value="$(Version)" />
  </Target>

  <Target Name="pushNugetPackages" DependsOnTargets="createNugetPackage" Condition="'$(Version)' != ''">
    <ItemGroup>
      <NuGetPackages Include="$(BuildOutputFolder)\*.nupkg" />
    </ItemGroup>

    <Message Text="Pushing NuGet packages..." />
    <Exec Command="$(NuGet) push %(NuGetPackages.FullPath)" />
  </Target>

  <Target Name="build_snoop" DependsOnTargets="clean_snoop_output_folder;compile_snoop;zip_snoop" />
  
  <Target Name="build_returnToSourceQueue" DependsOnTargets="clean_returnToSourceQueue_output_folder;compile_returnToSourceQueue;zip_returnToSourceQueue" />

  <Target Name="clean_snoop_output_folder">
    <Message Text="Removing old output folder"/>
    <RemoveDir Directories="$(SnoopOutputFolder)" ContinueOnError="true"/>
  </Target>

  <Target Name="compile_snoop">
    <MSBuild Projects="@(SnoopProjects)" Targets="build" StopOnFirstFailure="true" Properties="Configuration=Release;Platform=AnyCpu">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MSBuild>
  </Target>

  <Target Name="zip_snoop">
    <Exec Command="$(Zip) a $(SnoopOutputFolder)\Rebus.Snoop.zip $(SnoopProjectOutputFolder)\*.* -tZip -mx=9" />
  </Target>

  <Target Name="clean_returnToSourceQueue_output_folder">
    <Message Text="Removing old output folder"/>
    <RemoveDir Directories="$(ReturnToSourceQueueOutputFolder)" ContinueOnError="true"/>
  </Target>

  <Target Name="compile_returnToSourceQueue">
    <MSBuild Projects="@(ReturnToSourceQueueProjects)" Targets="build" StopOnFirstFailure="true" Properties="Configuration=Release;Platform=AnyCpu">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MSBuild>
  </Target>

  <Target Name="zip_returnToSourceQueue">
    <Exec Command="$(Zip) a $(ReturnToSourceQueueOutputFolder)\returnToSourceQueue.msmq.zip $(ReturnToSourceQueueMsmqProjectOutputFolder)\*.* -tZip -mx=9" />
  </Target>

  <Target Name="build_timeout" DependsOnTargets="clean_timeout_output_folder;compile_timeout;copy_timeout" />

  <Target Name="clean_timeout_output_folder">
    <Message Text="Removing old output folder"/>
    <RemoveDir Directories="$(TimeoutOutputFolder)" ContinueOnError="true"/>
  </Target>
  
  <Target Name="compile_timeout">
    <MSBuild Projects="@(TimeoutProjects)" Targets="build" StopOnFirstFailure="true" Properties="Configuration=Release">
      <Output TaskParameter="TargetOutputs" ItemName="AssembliesBuilt" />
    </MSBuild>
  </Target>

  <Target Name="copy_timeout">
    <Message Text="Copy timeout manager to output folder"/>
    <ItemGroup>
      <TimeoutOutput Include="$(TimeoutProjectOutputFolder)\*.*"/>
    </ItemGroup>
    <Copy SourceFiles="@(TimeoutOutput)" DestinationFolder="$(TimeoutOutputFolder)"/>
  </Target>
</Project>